


<%- include ("superheader.ejs") %>
<%- include ("supersidebar.ejs") %>

<style>
   .card{
      border-top: 4px solid #39444e;
    border-bottom: 4px solid #39444e;
}
</style>

      <!-- Sidebar chat end-->
      <div class="content-wrapper">
         <!-- Container-fluid starts -->
         <!-- Main content starts -->
         <div class="container-fluid">
             <div class="row ">
                <div class="col-lg-12">
                    <div class="bread-boxes">
                        <ol class="breadcrumb">
                            <li><a href="/superadmin"> Home </a></li>
                               <!-- <li><a href="#"> / Video </a></li> -->
                            <li class="active"> / Add Country</li>        
                          </ol>
                    </div>
                </div>
                 <!--  <div class="col-lg-6">
               <div class="headings headings-boxess mt-4">
                  <div class="main-headers mt-0" style="margin-top: 0px !important;">
                    <h4> <i class="fa fa-arrow-circle-o-left yellow_color"></i>  User Withdrawl Report </h4>
                     </div>
                </div>
             </div> -->       
            </div>

            <!-- 1-3-block row start -->
            <div class="row pt-3">
               <div class="col-lg-12">
                <div class="card mb-4" style="border-top:4px solid black;">
                <div class="cards-headers py-3 px-3 d-flex flex-row align-items-center justify-content-between">
                     <div class="heads-lefts">
                 <a href="#">  <h6 class=" font-weight-bold "><i class="fa fa-arrow-circle-o-left yellow_color"></i> Add Country </h6> </a>
                 </div>
                    <div class="heads-rights">
                    <!-- <a class="btn btn-success waves-effect waves-light " href="Owner_view_Owner.html"><i class="fa fa-user  mr-1"></i> View Owner   </a> -->
                  </div>
                  </div>




                  <form id="kilfrom" method="post" action="/superadmin/addCountry" enctype="multipart/form-data" >
                  <div class="user-form">
                           <div class="form-group row users-foarms">


                                 <div class="form-group col-md-4">
                                     <i class="fa fa-building icon-set"></i>
                                    <label for="exampleInputEmail" class="form-control-label">Country Name </label>
                                    <input type="text" name="country_name" class="form-control" id="countryName" placeholder="Enter Country Name" onkeyup="validateKilvishInput(event)" onchange="validateKilvishInput(event)" required>
                                    <div id="kilError" style="color: red;"></div>
                                 </div>

                                 <div class="form-group col-md-4">
                                    <i class="fa fa-usd icon-set"></i>
                                      <label for="exampleInputEmail" class="form-control-label">country_code  </label>
                                      <input name="country_code" type="text" class="form-control" id="countryCode" placeholder="Enter  Name" onkeyup="validateKilvishInput(event)" onchange="validateKilvishInput(event)" required >
                                      <div id="kilErrorcountry_code" style="color: red;"></div>
                                 </div>



                                  <div class="form-group col-md-4">
                                     <i class="fa fa-image icon-set"></i>
                                    <label for="exampleInputEmail" class="form-control-label">Country Map Image  </label>
                                    <input name="country_image" type="file" class="form-control" id="exampleInputfirst" placeholder="Enter image" onkeyup="validateKilvishInput(event)" onchange="validateKilvishInput(event)" required>
                                 </div>


                              

                                 <div class="form-group col-md-4">
                                    <i class="fa fa-usd icon-set"></i>
                                      <label for="exampleInputEmail" class="form-control-label">Currency Name(eg. USD) </label>
                                      <input  name="currency_name" type="text" class="form-control" id="currencyName" placeholder="Enter  Name" onkeyup="validateKilvishInput(event)" onchange="validateKilvishInput(event)" required>
                                      <div id="kilErrorcurrency_name" style="color: red;"></div>
                                 </div>

                                


                                     <div class="form-group col-md-4">
                                        <i class="fa fa-gg icon-set"></i>
                                      <label for="exampleInputEmail" class="form-control-label">Currency Symbol </label>
                                      <input  name="currency_symbol" type="text" class="form-control" id="exampleInputfirst" placeholder="Enter Add Symbol" onkeyup="validateKilvishInput(event)" onchange="validateKilvishInput(event)" required>
                                   </div>


                                 <div class="form-group col-md-12">
                                 <button type="submit" onclick="validateForm('#kilfrom')"  class="btn btn-success waves-effect waves-light m-r-30">Submit</button>
                                 </div>


                           </div>
                   </div>
                  </form>
                     <!-- alert msgs -->
                     <% if ( output.includes('successfully') ) { %>
                        <p class="success-text"><%= output %></p>
                  <% } else { %>
                        <p class="error-text"><%= output %></p>
                  <% } %>
            <!-- /alert msgs -->  


                 </div>
               </div>
            </div>
            <!-- 1-3-block row end -->


            <!-- 1-3-block row start -->
            <div class="row">
               <div class="col-lg-12">
                <div class="card mb-4" style="border-top:4px solid black;">
               <div class="cards-headers py-3 px-3 d-flex flex-row align-items-center justify-content-between">
                     <div class="heads-lefts">
                  <h6 class=" font-weight-bold "><i class="fa fa-arrow-circle-o-left"></i> View Country  </h6>
                  <p>Test Emoji: ðŸ‡¦ðŸ‡º (Inline Emoji)</p>

                 </div>
                    <div class="heads-rights">
                    <!-- <a class="btn btn-success waves-effect waves-light " href="user_addUser.html"><i class="fa fa-user  mr-1"></i> Add User  </a> -->
                  </div>
                  </div>
                  <div class="user-form">
                     <div class="table-reponsive box">
                        <div id="example_wrapper" class="dataTables_wrapper dt-bootstrap4 no-footer">
                          <div class="row">
                          <table id="example" class="table table-striped table-bordered dataTable no-footer" role="grid" aria-describedby="example_info">
                        <thead>
                             <tr role="row">
                                <th class="sorting" tabindex="0" aria-controls="example" rowspan="1" colspan="1" aria-label="Day: activate to sort column ascending" style="width: 25.0781px;">S.no</th>
                                <th class="sorting" tabindex="0" aria-controls="example" rowspan="1" colspan="1" aria-label="Day: activate to sort column ascending" style="width: 80.0781px;"> Country Name</th>
                                 <th class="sorting" tabindex="0" aria-controls="example" rowspan="1" colspan="1" aria-label="Day: activate to sort column ascending" style="width: 80.0781px;"> Country Map</th>
                              <th class="sorting" tabindex="0" aria-controls="example" rowspan="1" colspan="1" aria-label="5%: activate to sort column ascending" style="width: 80.1719px;">Country Flag</th>
                               <th class="sorting" tabindex="0" aria-controls="example" rowspan="1" colspan="1" aria-label="5%: activate to sort column ascending" style="width: 80.1719px;">Country Code</th>
                                <th class="sorting" tabindex="0" aria-controls="example" rowspan="1" colspan="1" aria-label="5%: activate to sort column ascending" style="width: 80.1719px;">Currency Code and Symbol </th>
                                <th style="width: 80.156px;">Status</th>
                                <th class="sorting" tabindex="0" aria-controls="example" rowspan="1" colspan="1" aria-label="Action: activate to sort column ascending" style="width: 120.156px;">Action</th>
                            
                            </tr>
                        </thead>
                           <div class="table-responsive">
                              </div>
                              <tbody>
                                 <% countries.forEach((country, index) => { %>
                                     <tr>
                                         <!-- S.no -->
                                         <td><%= index + 1 %></td>
             
                                         <!-- Country Name -->
                                         <td><%= country.country_name %></td>
             
                                         <!-- Country Map Image -->
                                         <td>
                                             <% if (country.country_image) { %>
                                                 <img src="/images/icons/<%= country.country_image %>" alt="<%= country.country_name %> Map" width="50" height="50">
                                             <% } else { %>
                                                 <span>No Image</span>
                                             <% } %>
                                         </td>

                                          <td style="font-family: 'Segoe UI Emoji', 'Apple Color Emoji', 'Noto Color Emoji', sans-serif !important;">
                                             
                                             <%= country.country_flag %>
                                          
                                          </td>

                                         <!-- Country Code -->
                                         <td><%= country.country_code %></td>
             
                                         <!-- Currency Code and Symbol -->
                                         <td><%= country.currency_name %> (<%= country.currency_symbol %>)</td>





                                         <td class="status-container" data-user-id="<%=  country.location_id %>" data-user-status="<%= country.status %>">
                                          <div >
                                            <% if (country.status == 'Active') { %>
                                              <img src="../images/icons/active.png" class="status-image" style="width:30px;height:30px;">
                                            <% } else { %>
                                              <img src="../images/icons/inactive.png" class="status-image" style="width:30px;height:30px;">
                                            <% } %>
                                            <div class="status-overlay"></div>
                                          </div>
                                                             
                                        
                                          <% if (country.status == 'Active') { %>
                                             <p id="msg<%=  country.location_id %>" style="color: rgb(255, 58, 9);"></p>
                                             <p class="kilstatus" style="color: green;"> Activated</p>
                                             <% } else { %>
                                               <p id="msg<%=  country.location_id %>" style="color: green;"></p>
                                               <p class="kilstatus" style="color: red;"> Deactivated</p>
                   
                                               <% } %>                    
                                      
                  
                                        </td> 
                                        
                                        

                                      <td>
                                       <a href="javascript:void(0)" onclick="updateCountryDetails('<%= country.location_id %>', '<%= JSON.stringify(country) %>')" title="Update">
                                           <i class="fa fa-edit icon-2"></i>
                                       </a>
                                       <a href="javascript:void(0)" onclick="deleteCountry('<%= country.location_id  %>', '<%= country.country_name  %>')" title="Delete" >
                                           <i class="fa fa-trash icon-5"></i>
                                       </a>



                                       <% if (country.status === 'Active') { %>
                                        
                                          <a href="javascript:void(0)" onclick="changeCountryStatus('<%= country.location_id  %>', 'Inactive', '<%= country.country_name %>')"  title="Make Inactive" >
                                           
                                              <i class="fa fa-times icon-4"></i>
                                          </a>
                                        <% } else { %>
                                        
                                          <a href="javascript:void(0)" onclick="changeCountryStatus('<%= country.location_id  %>', 'Active', '<%= country.country_name %>')" title="Make Active" >
                                              <i class="fa fa-check-square-o icon-3"></i>
                                          </a>
                                        <% } %>

                                     
                                   </td>



                                     </tr>
                                 <% }) %>
                             </tbody>


                            </table>
                        </div>
                      </div>
                  </div>
                   </div>
                 </div> 
               </div>
            </div>
            <!-- 1-3-block row end -->

   
         </div>
         <!-- Main content ends -->
         <!-- Container-fluid ends -->
      </div>
   </div>


   
   <%- include ("superfooter.ejs") %>


   
<script>


   //-------------- Comman Kilvish Function for input validation start ---------------------
   
   
   
   
   function validateRequiredFields(kil) {

       const form = document.querySelector(`${kil}`); 
       const inputs = form.querySelectorAll('input[required], select[required], textarea[required]'); // Get only required inputs
       let isValid = true;
   
       
   
       // Remove previous error messages and borders
       form.querySelectorAll('.error-message').forEach(errorMsg => errorMsg.remove());
       inputs.forEach(input => {
           input.style.border = ''; // Reset borders
       });
   
       inputs.forEach(input => {
           if (!input.value.trim()) {  // If the required field is empty
               isValid = false;
               input.style.border = '1px solid red'; // Set border to red for empty required fields
               addErrorMessage(input.parentNode, "This Field is Required."); // Add error message
           }
       });
   
       return isValid;
   }

   // Add real-time validation for each required field
function addRealTimeValidation(kil) {
    const form = document.querySelector(`${kil}`); 
    const inputs = form.querySelectorAll('input[required], select[required], textarea[required]');

    inputs.forEach(input => {
        // Listen for 'input' and 'change' events on required fields
        input.addEventListener('input', function () {
            if (input.value.trim()) {
                // If the input is filled, remove red border and error message
                input.style.border = '';
                const errorMessage = input.parentNode.querySelector('.error-message');
                if (errorMessage) {
                    errorMessage.remove();
                }
            }
        });
        input.addEventListener('change', function () {
            if (input.value.trim()) {
                // For select fields, check if an option is selected
                input.style.border = '';
                const errorMessage = input.parentNode.querySelector('.error-message');
                if (errorMessage) {
                    errorMessage.remove();
                }
            }
        });
    });
}

   
   
   
   // Combined validation function
   function validateForm(kil) {
   
      if(!validateRequiredFields(kil)){
         event.preventDefault();
      }
   }

   // Add real-time validation once the document is loaded
document.addEventListener('DOMContentLoaded', () => {
    addRealTimeValidation('#kilfrom');  // Activate real-time validation
});
   
   
   function validateKilvishInput(event) {
       const inputField = event.target;
   
       // General valid character sets
       // let validCharacters = /^[a-zA-Z0-9@,._\s-]*$/;
   
       let validCharacters = /^[a-zA-Z\s]*$/; // only char, no special char no numbers 
   
       // Define allowed image file types
       const validImageTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/bmp', 'image/tiff', 'image/webp', 'image/svg+xml'];
   
       // Use parentNode for regular inputs, container for checkboxes
       const container = inputField.closest('.col-lg-12') || inputField.closest('.form-group') || inputField.closest('div');
       const inputParent = inputField.parentNode;
   
       // Remove previous error message and border
       let errorMessage = inputParent.querySelector('.error-message');
       if (errorMessage) errorMessage.remove();
       inputField.style.border = ''; // Reset border
   
       // Custom validations based on input name
       if (inputField.name === 'description') {
           validCharacters = /^[a-zA-Z0-9@,._\s-'"*]*$/;
   
           // Check length limit
           if (inputField.value.length > 400) {
               addErrorMessage(inputParent, 'Input exceeds the maximum length of 400 characters!');
               inputField.style.border = '1px solid red';
               inputField.value = inputField.value.substring(0, 400); // Truncate the input
               return;
           }
       } else if (inputField.name === 'currency_symbol') {
          
         // validCharacters = /^[\s\S]*$/; // allow all 
         validCharacters = /^[\$\â‚¬\Â£\Â¥\â‚¹\â‚½a-zA-Z\s]*$/;   
       }else if (inputField.name === 'age') {
           // Only numbers allowed, between 7 and 10 digits
           validCharacters = /^\d{2,2}$/;
             // Custom validation: Ensure age is 18 or above
                 if (inputField.value && parseInt(inputField.value) < 18 && event.type === 'change') {
                     addErrorMessage(inputParent, 'Age must be 18 or above!');
                     inputField.style.border = '1px solid red';
                     inputField.value = ''; // Clear the input field if age is below 18
                     return;
                 }else if(inputField.value && parseInt(inputField.value) < 18 ){
                   addErrorMessage(inputParent, 'Age must be 18 or above!');
                     inputField.style.border = '1px solid red';                 
   
                 }
               }else if (inputField.name === 'model_name' || inputField.name ==='models[]') {
                  // Only numbers allowed, between 7 and 10 digits
                  validCharacters = /^[a-zA-Z0-9]{4,20}$/;
               }else if(inputField.type ==='email'){
                  validCharacters = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,6}$/; // Basic email pattern
               }else if(inputField.type ==='password'){
   
                               const hasSequentialChars = (password) => {
                                    console.log("passworddddddd -", password)
                                    const length = password.length;
                                    
                                    // Check for ascending sequences (e.g., "123", "abc")
                                    for (let i = 0; i < length - 3; i++) {
                                       if (password.charCodeAt(i + 1) === password.charCodeAt(i) + 1 &&
                                             password.charCodeAt(i + 2) === password.charCodeAt(i) + 2 &&
                                             password.charCodeAt(i + 3) === password.charCodeAt(i) + 3) {
                                             return true; // Ascending sequence found
                                       }
                                    }
   
                                    // Check for descending sequences (e.g., "321", "cba")
                                    for (let i = 0; i < length - 3; i++) {
                                       if (password.charCodeAt(i + 1) === password.charCodeAt(i) - 1 &&
                                             password.charCodeAt(i + 2) === password.charCodeAt(i) - 2 &&
                                             password.charCodeAt(i + 3) === password.charCodeAt(i) - 3) {
                                             return true; // Descending sequence found
                                       }
                                    }
                                    
                                    return false; // No sequential characters
                                 };
   
                  
   
                  validCharacters = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[\W_]).{12,}$/;
   
   
                                             // Check if password meets the required pattern
                              if (!validCharacters.test(inputField.value)) {
                                 addErrorMessage(inputParent, 'Password must be at least 12 characters long and contain at least one uppercase letter, one lowercase letter, one special character, and one number.');
                                 inputField.style.border = '1px solid red';
                                 if (event.type === 'change') {   inputField.value = '';  }
                                 return; // Stop further validation
                              }
   
                              // Check for sequential characters
                              if (hasSequentialChars(inputField.value)) {
                                 addErrorMessage(inputParent, 'Password should not contain sequential characters.');
                                 inputField.style.border = '1px solid red';
                                    if (event.type === 'change') {   inputField.value = '';  }
                                 return; // Stop further validation
                              }
   
   
                              // Function to check for sequential characters in the password
                    
                                                      
   
   
   
               }
                 
   
               
   
   
   
       // Handle file input validation
       if (inputField.type === 'file') {
           const file = inputField.files[0];
           if (file && !validImageTypes.includes(file.type)) {
               addErrorMessage(inputParent, 'Please select a valid image file (JPEG, PNG, etc.)');
               inputField.value = ''; // Clear the file input field
               inputField.style.border = '1px solid red';
               return;
           }
       } else {
           // For normal text/number input validation
           if (event.type === 'keyup') {
               if (!validCharacters.test(inputField.value)) {
                   addErrorMessage(inputParent, 'Invalid character entered!');
                   inputField.style.border = '1px solid red';
                   
               }
           }
   
           if (event.type === 'change') {
               if (!validCharacters.test(inputField.value)) {
                   // On invalid input during change event, clear the field and show an error
                   inputField.value = ''; // Clear invalid input
                   addErrorMessage(inputParent, 'Invalid character or format!');
                   inputField.style.border = '1px solid red';
               } else {
                   // Clear error when value is corrected
                   inputField.style.border = '';
                   if (errorMessage) errorMessage.remove();
               }
           }
       }
   }
   
   // Function to display error messages under the input field or container for checkboxes
   function addErrorMessage(parent, message) {
       if (!parent.querySelector('.error-message')) {
           const errorMessage = document.createElement('div');
           errorMessage.className = 'error-message';
           errorMessage.style.color = 'red';
           errorMessage.style.fontSize = '12px';
           errorMessage.innerText = message;
           parent.appendChild(errorMessage);
       }
   }
   
   
   
   
   
   //-------------- Comman Kilvish Function for input validation End ---------------------
   
   
   





</script>




<script>
   document.addEventListener("DOMContentLoaded", function() {
               document.cookie = 'rental_msg'+'=;expires=Thu, 01 Jan 1970 00:00:01 GMT;path=/';
               document.cookie = 'rental_msg'+'=;expires=Thu, 01 Jan 1970 00:00:01 GMT;';
               document.cookie = 'rental_location_id'+'=;expires=Thu, 01 Jan 1970 00:00:01 GMT;';
          
       });






       function updateCountryDetails(location_id, country) {
         country = JSON.parse(country);

    // Create the form structure for editing inside SweetAlert
    const htmlForm = `
        <div style="position: relative;">
            <!-- Close (X) Button -->
            <button type="button" class="swal2-close" onclick="Swal.close()" aria-label="Close" style="position: absolute; top: -10px; right: -10px; background: transparent; border: none; font-size: 24px; cursor: pointer;">&times;</button>
        </div>


        <form id="kileditfrom" action="/superadmin/updateCountryDetails" method="POST" enctype="multipart/form-data">
            <input type="hidden" name="location_id" value="${location_id}">   
           
                                   <div class="form-group" style="text-align: left;">
                                 
                                    <label for="exampleInputEmail" class="form-control-label">Country Name </label>
                                    <input value="${country.country_name}" type="text" name="country_name" class="form-control" id="countryNameupdate" placeholder="Enter Country Name" onkeyup="validateKilvishInput(event)" onchange="validateKilvishInput(event)" required>
                                     <div id="kilErrorupdate" style="color: red;"></div>
                                 </div>

                                   <div class="form-group" style="text-align: left;">
                                    <label for="exampleInputEmail" class="form-control-label">country_code  </label>
                                      <input value="${country.country_code}" name="country_code" type="text" class="form-control" id="countryCodeupdate" placeholder="Enter  Name" onkeyup="validateKilvishInput(event)" onchange="validateKilvishInput(event)" required >
                                       <div id="kilErrorcountry_codeupdate" style="color: red;"></div>
                                 </div>



                              <div class="form-group" style="text-align: left;">
                                    
                                    <label for="exampleInputEmail" class="form-control-label">Country Map Image  </label><br>
                                      <img src="../images/icons/${country.country_image}" width="100" height="100"/> <br>
                                    <input  name="country_image" type="file" class="form-control" id="exampleInputfirst" placeholder="Enter image" onkeyup="validateKilvishInput(event)" onchange="validateKilvishInput(event)">
                                 </div>


                              

                                  <div class="form-group" style="text-align: left;">
                                 
                                      <label for="exampleInputEmail" class="form-control-label">Currency Name </label>
                                      <input value="${country.currency_name}"  name="currency_name" type="text" class="form-control" id="currencyNameupdate" placeholder="Enter  Name" onkeyup="validateKilvishInput(event)" onchange="validateKilvishInput(event)" required>
                                       <div id="kilErrorcurrency_nameupdate" style="color: red;"></div>
                                 </div>

                                


                                       <div class="form-group" style="text-align: left;">
                          
                                      <label for="exampleInputEmail" class="form-control-label">Currency Symbol </label>
                                      <input value="${country.currency_symbol}"  name="currency_symbol" type="text" class="form-control" id="exampleInputfirst" placeholder="Enter Add Symbol" onkeyup="validateKilvishInput(event)" onchange="validateKilvishInput(event)" required>
                                   </div>


                                 <div class="form-group col-md-12">
                                 <button type="submit" onclick="validateForm('#kileditfrom')"  class="btn btn-success waves-effect waves-light m-r-30">Submit</button>
                                 </div>


        </form>



    `;

    // Open SweetAlert with the form
    Swal.fire({
        title: `<span style="font-size: 16px;">Update User : ${country.country_name}</span>`,
        html: htmlForm,
        showConfirmButton: false, // Disable default SweetAlert buttons, use form's submit buttons instead
        focusCancel: true,
        customClass: {
            popup: 'my-popup-class' // Add a custom class for the popup
        },
        allowOutsideClick: false
    });





        // Reattach event listeners for new form elements
        $('#countryNameupdate').on('change', function() {
        var country_name = $(this).val();
        $.ajax({
            type: 'POST',
            url: '/superadmin/checkCountry',
            data: { country_name: country_name },
            success: function(data) {
                if (data.exists) {
                    $('#kilErrorupdate').text(`A record with the given Country Name (${country_name}) already exists.`);
                    $('#countryNameupdate').val("");
                } else {
                    $('#kilErrorupdate').text("");
                }
            }
        });
    });

    $('#countryCodeupdate').on('change', function() {
        var country_code = $(this).val();
        $.ajax({
            type: 'POST',
            url: '/superadmin/checkcountryCode',
            data: { country_code: country_code },
            success: function(data) {
                if (data.exists) {
                    $('#kilErrorcountry_codeupdate').text(`A record with the given Country Code (${country_code}) already exists.`);
                    $('#countryCodeupdate').val("");
                } else {
                    $('#kilErrorcountry_codeupdate').text("");
                }
            }
        });
    });

    $('#currencyNameupdate').on('change', function() {
        var currency_name = $(this).val();
        $.ajax({
            type: 'POST',
            url: '/superadmin/checkcurrencyName',
            data: { currency_name: currency_name },
            success: function(data) {
                if (data.exists) {
                    $('#kilErrorcurrency_nameupdate').text(`A record with the given Currency Name (${currency_name}) already exists.`);
                    $('#currencyNameupdate').val("");
                } else {
                    $('#kilErrorcurrency_nameupdate').text("");
                }
            }
        });
    });


    // Add real-time validation for inputs (reuse the existing validation)
    addRealTimeValidation('#kileditfrom'); // Ensure real-time validation works with the new modal form
}

   
   // Function to open the SweetAlert slideshow
   function openImageSlideshow(imagesString) {
       const images = imagesString.split(','); // Split the images by comma
       let currentIndex = 0;
   
       // Function to update the content inside SweetAlert
       function updateImage(index) {
           const totalImages = images.length;
           const imgSrc = `/images/vehicleUploads/${images[index].trim()}`;
           const imageTag = `<img src="${imgSrc}" style="width:100%; height:auto;" />`;
           const navigationText = `${index + 1} of ${totalImages} Images`;
   
           // Display SweetAlert
           Swal.fire({
               title: navigationText, // Display image count
               html: imageTag,
               showCancelButton: true,
               showConfirmButton: true,
               confirmButtonText: 'Next',
               cancelButtonText: 'Previous',
               allowOutsideClick: false,
               showCloseButton: true,
               preConfirm: () => {
                   if (currentIndex < totalImages - 1) {
                       currentIndex++;
                       updateImage(currentIndex); // Go to next image
                   }
               },
               preCancel: () => {
                   if (currentIndex > 0) {
                       currentIndex--;
                       updateImage(currentIndex); // Go to previous image
                   }
               }
           });
       }
   
       // Start slideshow with the first image
       updateImage(currentIndex);
   }
   
   
   
   //============= ======= Change Type Status  ============= 
   
   
   function changeCountryStatus(location_id, newStatus,country_name ) {
     event.preventDefault(); 
     var action;
   if(newStatus== 'Inactive'){
     action = 'deactivated'
   }else{
     action = 'activated '
   }
    
   
     const userStatusElement = document.getElementById(`userStatus${location_id}`);
     const pmsgElement  = document.getElementById(`msg${location_id}`);
   
       $.ajax({
           url: '/superadmin/changeCountryStatus',
           type: 'POST',
           data: { id: location_id, status: newStatus },
           beforeSend: function() {
               // Hide the kilstatus paragraph before the request
               $('.kilstatus').hide();
           },
           success: function(response) {  
              console.log(response)       
              
                       if (response.success == true) {
                  
                                                         $('[data-user-id="' + location_id + '"]').attr('data-user-status', newStatus);
   
                                   // Update image source and tooltip based on new status
                                   var imgSrc = (newStatus === 'Active') ? '../images/icons/active.png' : '../images/icons/inactive.png';
                                   $('[data-user-id="' + location_id + '"] .status-image').attr('src', imgSrc);
                                   $('[data-user-id="' + location_id + '"] .status-tooltip').attr('title', (newStatus === 'Active') ? 'deactive' : 'Active');
   
                                   // Add fade in overlay and change background color based on new status
                                   var bgColor = (newStatus === 'Active') ? 'rgba(163,209,121,0.5)' : 'rgba(227 99 99 / 50%)';
                                   var textColor = (newStatus === 'Approve') ? '#3c763d' : '#ffffff'; // White font for non-Approve status
                                   // $('[data-user-id="' + location_id + '"] .status-overlay').css('background-color', bgColor).fadeIn();
   
                                   $('[data-user-id="' + location_id + '"] .status-overlay').css({
                                       'background-color': bgColor,
                                       'color': textColor + ' !important', // Force the font color change
                                     
                                   }).fadeIn();
   
                                   pmsgElement.innerHTML = response.msg;
                                   var msg = 'Country & Currency '+country_name+' '+action+' successfully'
                                   document.cookie = `rental_msg=${msg}`;
   
                                   // Fade out the overlay after a delay
                                   setTimeout(function() {
                                    
                                       $('[data-user-id="' + location_id + '"] .status-overlay').fadeOut();
                                       window.location.href = '/superadmin/addCountry'
                                   }, 1500);
   
                                   // $('.kilstatus').show();
   
   
                 } else {
                     console.error('Error:', response.msg);
                     $("#errorMessage").removeClass("d-none");
                     $("#successMessage").addClass("d-none");
                 }
   
   
           },
           error: function(error) { alert("ajax error")
             console.error('Error:', error);
             $("#errorMessage").text('Ajax Error');
       $("#errorMessage").removeClass("d-none");
       $("#successMessage").addClass("d-none");
           }
       });
   }
   
   
   
   
   
   //============= Delete  Popup start  ======================
   
   
   function deleteCountry(location_id,country_name) {
   
   // Use SweetAlert2 for a stylish confirmation
   Swal.fire({
             title: 'Are you sure?',
             html: `<span style="color: red;">All the Data Related to Country : <span style="font-weight: bold; color: red; background-color: yellow;">${country_name}</span> Will be Permanently Deleted from all Records.</span>`,
             icon: 'warning',
             showCancelButton: true,
             confirmButtonColor: '#3085d6',
             cancelButtonColor: '#d33',
             confirmButtonText: 'Yes, delete Country'
         }).then((result) => {
             if (result.isConfirmed) {
                 // Make an AJAX request to delete the user
                                     $.ajax({
                             url: '/superadmin/deleteCountry',
                             type: 'POST',
                             data: { id: location_id },
                             success: function(response) {
                               if (response.success == true) {
                                 document.cookie = `rental_msg=${response.msg}`;
                                 window.location.href = '/superadmin/addCountry'
                               }else{
                                // alert(response.msg)
                                  document.cookie = `rental_msg=${response.msg}`;
                               window.location.href = '/superadmin/addCountry'
                               }
                             },
                             error: function(error) {
                                 console.error('Error:', error);
                             }
                         });
             }
         });
   
   
   
   }
   
   
   
   //=============== Delete Poupu end ====================
   
   
   
   
   //====================   kilcheck checkMake ================ -> 
     $(document).ready(function() 
   {
   
   
       $('#countryName').on('change', function()
       {  
           var country_name = $(this).val();
           var kilvishInput = document.getElementById('countryName');
           $.ajax({
               type: 'POST',
               url: '/superadmin/checkCountry',
               data: { country_name: country_name },
               success: function(data) 
               {
                
                   if (data.exists == true)
                   {
                       $('#kilError').text("A record with the given Country Name ( "+ country_name + " ) already exist, Enter another unnique Country Name and try again.");
                     
                       kilvishInput.value = "";
                   } 
                   else
                   {
                     if( kilvishInput.value == ""){
                     
                       $('#kilError').text("");
                     }else{
                     
                       $('#kilError').text("");
                     }
                        
                   }
               }
           });
       });
   
   
       
   });



   
   $(document).ready(function() 
   {
   
   
       $('#countryCode').on('change', function()
       {  
           var country_code = $(this).val();
           var kilvishInput = document.getElementById('countryCode');
           $.ajax({
               type: 'POST',
               url: '/superadmin/checkcountryCode',
               data: { country_code: country_code },
               success: function(data) 
               {
                
                   if (data.exists == true)
                   {
                       $('#kilErrorcountry_code').text("A record with the given Country Code ( "+ country_code + " ) already exist, Enter another unnique Code and try again.");
                     
                       kilvishInput.value = "";
                   } 
                   else
                   {
                     if( kilvishInput.value == ""){
                     
                       $('#kilErrorcountry_code').text("");
                     }else{
                     
                       $('#kilErrorcountry_code').text("");
                     }
                        
                   }
               }
           });
       });
   
   
       
   });




   $(document).ready(function() 
   {
   
   
       $('#currencyName').on('change', function()
       {  
           var currency_name = $(this).val();
           var kilvishInput = document.getElementById('currencyName');
           $.ajax({
               type: 'POST',
               url: '/superadmin/checkcurrencyName',
               data: { currency_name: currency_name },
               success: function(data) 
               {
                
                   if (data.exists == true)
                   {
                       $('#kilErrorcurrency_name').text("A record with the given currency name ( "+ currency_name + " ) already exist, Enter another unnique Currency Name and try again.");
                     
                       kilvishInput.value = "";
                   } 
                   else
                   {
                     if( kilvishInput.value == ""){
                     
                       $('#kilErrorcurrency_name').text("");
                     }else{
                     
                       $('#kilErrorcurrency_name').text("");
                     }
                        
                   }
               }
           });
       });
   
   
       
   });






   
//----------- kilcheck things on update ---- 

// $(document).ready(function() 
//    {
   
   
//        $('#countryNameupdate').on('change', function()
//        {  
//            var country_name = $(this).val();
//            var kilvishInput = document.getElementById('countryNameupdate');
//            $.ajax({
//                type: 'POST',
//                url: '/superadmin/checkCountry',
//                data: { country_name: country_name },
//                success: function(data) 
//                {
                
//                    if (data.exists == true)
//                    {
//                        $('#kilErrorupdate').text("A record with the given Country Name ( "+ country_name + " ) already exist, Enter another unnique Country Name and try again.");
                     
//                        kilvishInput.value = "";
//                    } 
//                    else
//                    {
//                      if( kilvishInput.value == ""){
                     
//                        $('#kilErrorupdate').text("");
//                      }else{
                     
//                        $('#kilErrorupdate').text("");
//                      }
                        
//                    }
//                }
//            });
//        });
   
   
       
//    });



   
//    $(document).ready(function() 
//    {
   
   
//        $('#countryCodeupdate').on('change', function()
//        {  
//            var country_code = $(this).val();
//            var kilvishInput = document.getElementById('countryCodeupdate');
//            $.ajax({
//                type: 'POST',
//                url: '/superadmin/checkcountryCode',
//                data: { country_code: country_code },
//                success: function(data) 
//                {
                
//                    if (data.exists == true)
//                    {
//                        $('#kilErrorcountry_codeupdate').text("A record with the given Country Code ( "+ country_code + " ) already exist, Enter another unnique Code and try again.");
                     
//                        kilvishInput.value = "";
//                    } 
//                    else
//                    {
//                      if( kilvishInput.value == ""){
                     
//                        $('#kilErrorcountry_codeupdate').text("");
//                      }else{
                     
//                        $('#kilErrorcountry_codeupdate').text("");
//                      }
                        
//                    }
//                }
//            });
//        });
   
   
       
//    });




//    $(document).ready(function() 
//    {
   
   
//        $('#currencyNameupdate').on('change', function()
//        {  
//            var currency_name = $(this).val();
//            var kilvishInput = document.getElementById('currencyNameupdate');
//            $.ajax({
//                type: 'POST',
//                url: '/superadmin/checkcurrencyName',
//                data: { currency_name: currency_name },
//                success: function(data) 
//                {
                
//                    if (data.exists == true)
//                    {
//                        $('#kilErrorcurrency_nameupdate').text("A record with the given currency name ( "+ currency_name + " ) already exist, Enter another unnique Currency Name and try again.");
                     
//                        kilvishInput.value = "";
//                    } 
//                    else
//                    {
//                      if( kilvishInput.value == ""){
                     
//                        $('#kilErrorcurrency_nameupdate').text("");
//                      }else{
                     
//                        $('#kilErrorcurrency_nameupdate').text("");
//                      }
                        
//                    }
//                }
//            });
//        });
   
   
       
//    });





      
   
   
   
     
   </script>
   
   
   

